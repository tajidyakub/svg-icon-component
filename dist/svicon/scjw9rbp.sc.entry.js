class t{constructor(){this.scale="1",this.strokeWidth="2",this.fillColor="none",this.strokeColor="currentColor"}setDimension(t){return[`${t}em`,`${t}em`]}async fetchSvgContent(){let t=await document.createElement("div");await fetch(this.iconPath).then(e=>e.text().then(e=>{t.innerHTML=e,this.svgEl=t.removeChild(t.firstChild)}))}setElAttributes(t){t.setAttribute("width",this.width),t.setAttribute("height",this.height),t.setAttribute("fill",this.fillColor),t.setAttribute("stroke",this.strokeColor),t.setAttribute("stroke-width",this.strokeWidth),t.setAttribute("stroke-linejoin","round"),t.setAttribute("stroke-linecap","round")}async componentWillLoad(){[this.width,this.height]=await this.setDimension(this.scale),this.fetchSvgContent=await this.fetchSvgContent.bind(this),await this.fetchSvgContent(),await this.el.shadowRoot.appendChild(this.svgEl);let t=await this.el.shadowRoot.querySelector("svg");await this.setElAttributes(t)}static get is(){return"sv-icon"}static get encapsulation(){return"shadow"}static get properties(){return{el:{elementRef:!0},fillColor:{type:String,attr:"fill-color",reflectToAttr:!0},iconPath:{type:String,attr:"icon-path",reflectToAttr:!0},scale:{type:String,attr:"scale",reflectToAttr:!0},strokeColor:{type:String,attr:"stroke-color",reflectToAttr:!0},strokeWidth:{type:String,attr:"stroke-width",reflectToAttr:!0}}}static get style(){return"sv-icon.sc-sv-icon{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:baseline;align-items:baseline;-ms-flex-line-pack:center;align-content:center;margin:auto;line-height:1.5;-ms-flex-positive:0;flex-grow:0}"}}export{t as SvIcon};