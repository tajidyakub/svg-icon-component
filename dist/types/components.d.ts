/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import './stencil.core';




export namespace Components {

  interface SvIconSprite {
    /**
    * Optional Fill color prop (default: "none")
    */
    'fillColor': string;
    /**
    * Required Icon prop (default: undefined)
    */
    'icon': string;
    /**
    * Optional Scale prop (default: "1")
    */
    'scale': string;
    /**
    * Optional Stroke color prop (default: "currentColor")
    */
    'strokeColor': string;
    /**
    * Optional Stroke Width prop (default: "2")
    */
    'strokeWidth': string;
  }
  interface SvIconSpriteAttributes extends StencilHTMLAttributes {
    /**
    * Optional Fill color prop (default: "none")
    */
    'fillColor'?: string;
    /**
    * Required Icon prop (default: undefined)
    */
    'icon': string;
    /**
    * Optional Scale prop (default: "1")
    */
    'scale'?: string;
    /**
    * Optional Stroke color prop (default: "currentColor")
    */
    'strokeColor'?: string;
    /**
    * Optional Stroke Width prop (default: "2")
    */
    'strokeWidth'?: string;
  }

  interface SvIcon {
    /**
    * Optional Fill color prop (default: "none")
    */
    'fillColor': string;
    /**
    * Required Icon Path prop (default: undefined)
    */
    'iconPath': string;
    /**
    * Optional Scale prop (default: "1")
    */
    'scale': string;
    /**
    * Optional Stroke color prop (default: "currentColor")
    */
    'strokeColor': string;
    /**
    * Optional Stroke Width prop (default: "2")
    */
    'strokeWidth': string;
  }
  interface SvIconAttributes extends StencilHTMLAttributes {
    /**
    * Optional Fill color prop (default: "none")
    */
    'fillColor'?: string;
    /**
    * Required Icon Path prop (default: undefined)
    */
    'iconPath': string;
    /**
    * Optional Scale prop (default: "1")
    */
    'scale'?: string;
    /**
    * Optional Stroke color prop (default: "currentColor")
    */
    'strokeColor'?: string;
    /**
    * Optional Stroke Width prop (default: "2")
    */
    'strokeWidth'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'SvIconSprite': Components.SvIconSprite;
    'SvIcon': Components.SvIcon;
  }

  interface StencilIntrinsicElements {
    'sv-icon-sprite': Components.SvIconSpriteAttributes;
    'sv-icon': Components.SvIconAttributes;
  }


  interface HTMLSvIconSpriteElement extends Components.SvIconSprite, HTMLStencilElement {}
  var HTMLSvIconSpriteElement: {
    prototype: HTMLSvIconSpriteElement;
    new (): HTMLSvIconSpriteElement;
  };

  interface HTMLSvIconElement extends Components.SvIcon, HTMLStencilElement {}
  var HTMLSvIconElement: {
    prototype: HTMLSvIconElement;
    new (): HTMLSvIconElement;
  };

  interface HTMLElementTagNameMap {
    'sv-icon-sprite': HTMLSvIconSpriteElement
    'sv-icon': HTMLSvIconElement
  }

  interface ElementTagNameMap {
    'sv-icon-sprite': HTMLSvIconSpriteElement;
    'sv-icon': HTMLSvIconElement;
  }


}
